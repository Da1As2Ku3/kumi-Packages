gap_pop<-ddply(gapminder,.(continent),get.total.pop)
gap_pop
#We note that the pop has been exagerated so we add another variable to the list of splitting criteria.
gap_pop<-ddply(gapminder,.(continent,year),get.total.pop)
gap_pop
library(gapminder)
library(plyr)
library(ggplot2)
library(dplyr)
library(DT)
data(gapminder)
max_gdp<-ddply(gapminder,.(continent,year),function(x)max(x$gdpPercap))
max_gdp
DT::datatable(max_gdp,options=list(pageLength=10))
library(gapminder)
library(plyr)
library(ggplot2)
library(dplyr)
library(DT)
data(gapminder)
get.countries<-function(x)unique(x$country)
#use dlply
countries<-dlply(gapminder,.(continent),function(x)unique(x$country))
countries
countries<-dlply(gapminder,.(continent)get.countries)
library(gapminder)
library(plyr)
library(ggplot2)
library(dplyr)
library(DT)
data(gapminder)
get.countries<-function(x)unique(x$country)
#use dlply
countries<-dlply(gapminder,.(continent),function(x)unique(x$country))
countries
countries<-dlply(gapminder,.(continent),get.countries)
countries
library(gapminder)
library(plyr)
library(ggplot2)
library(dplyr)
library(DT)
data(gapminder)
model<-function(x){
lm(lifeExp~log10(gdpPercap),data=gapminder)
}
#Now let's try it on a subset of data
fit<-model(data[data$year==1982 & data$continent=="Asia",])
library(gapminder)
library(plyr)
library(ggplot2)
library(dplyr)
library(DT)
data(gapminder)
model<-function(x){
lm(lifeExp~log10(gdpPercap),data=gapminder)
}
#Now let's try it on a subset of data
fit<-model(data[data$year==1982 & data$continent=="Asia",])
fit
library(gapminder)
library(plyr)
library(ggplot2)
library(dplyr)
library(DT)
data(gapminder)
model<-function(x){
lm(lifeExp~log10(gdpPercap),data=gapminder)
}
#Now let's try it on a subset of data
fit<-model(data[data$year==1982 & data$continent=="Asia",])
fit
#let's apply it to all continents in all years
fitted.linear.model<-dlply(data,.(continent,year),model)
library(gapminder)
library(plyr)
library(ggplot2)
library(dplyr)
library(DT)
data(gapminder)
model<-function(x){
lm(lifeExp~log10(gdpPercap),data=gapminder)
}
#Now let's try it on a subset of data
fit<-model(data[data$year==1982 & data$continent=="Asia",])
fit
#let's apply it to all continents in all years
dlply(data,.(continent,year),model)
library(gapminder)
library(plyr)
library(ggplot2)
library(dplyr)
library(DT)
data(gapminder)
model<-function(x){
lm(lifeExp~log10(gdpPercap),data=gapminder)
}
#Now let's try it on a subset of data
fit<-model(data[data$year==1982 & data$continent=="Asia",])
fit
#let's apply it to all continents in all years
ldply(data,.(continent,year),model)
library(gapminder)
library(plyr)
library(ggplot2)
library(dplyr)
library(DT)
data(gapminder)
model<-function(x){
lm(lifeExp~log10(gdpPercap),data=gapminder)
}
#Now let's try it on a subset of data
fit<-model(data[data$year==1982 & data$continent=="Asia",])
fit
library(gapminder)
library(plyr)
library(ggplot2)
library(dplyr)
library(DT)
data(gapminder)
model<-function(x){
lm(lifeExp~log10(gdpPercap),data=gapminder)
}
#Now let's try it on a subset of data
fit<-model(data[data$year==1982 & data$continent=="Asia",])
fit
# Now let's apply it all continents in all years
fitted.linear.model<-dlply(data,.(continent,year),model)
library(gapminder)
library(plyr)
library(ggplot2)
library(dplyr)
library(DT)
data(gapminder)
model<-function(x){
lm(lifeExp~log10(gdpPercap),data=gapminder)
}
#Now let's try it on a subset of data
fit<-model(data[data$year==1982 & data$continent=="Asia",])
fit
# Now let's apply it all continents in all years
fitted.linear.model<-dlply(gapminder,.(continent,year),model)
coef(fitted.linear.model[[1]])
ldply(fitted.linear.model,coef)
library(gapminder)
library(plyr)
library(ggplot2)
library(dplyr)
library(DT)
data(gapminder)
model<-function(x){
lm(lifeExp~log10(gdpPercap),data=gapminder)
}
#Now let's try it on a subset of data
fit<-model(data[data$year==1982 & data$continent=="Asia",])
fit
# Now let's apply it all continents in all years
fitted.linear.model<-dlply(gapminder,.(continent,year),model)
coef(fitted.linear.model[[1]])
ldply(fitted.linear.model,coef)
#we want the r2 too
ldply(fitted.linear.model,function(x)summary(x)$r.squared)
library(gapminder)
library(plyr)
library(ggplot2)
library(dplyr)
library(DT)
data(gapminder)
model<-function(x){
fit<-lm(lifeExp~log10(gdpPercap),data=gapminder)
data.frame(n=length(x$lifeExp),r2=summary(fit)$r.squared,a=coef(fit)[[1]],b=coef(fit)[[2]])
}
#Then apply ddply
ddply(gapminder,.(continent,year),model)
library(gapminder)
library(plyr)
library(ggplot2)
library(dplyr)
library(DT)
data(gapminder)
model<-function(d,x,y){
fit<-lm(d[[y]]~log10(d[[x]]))
data.frame(n=length(d[[y]]),r2=summary(fit)$r.squared,a=coef(fit)[1],b=coef(fit)[2])
}
ddply(gapminder,.(continent,year),model,y="lifeExp",x="gdpPercap")
library(gapminder)
library(plyr)
library(ggplot2)
library(dplyr)
library(DT)
data(gapminder)
model<-function(d,x,y){
fit<-lm(d[[y]]~log10(d[[x]]))
data.frame(n=length(d[[y]]),r2=summary(fit)$r.squared,a=coef(fit)[1],b=coef(fit)[2])
}
ddply(gapminder,.(continent,year),model,y="lifeExp",x="gdpPercap")
ddply(data,.(continent,year),model,y="lifeExp",x="pop")
library(gapminder)
library(plyr)
library(ggplot2)
library(dplyr)
library(DT)
data(gapminder)
model<-function(d,x,y){
fit<-lm(d[[y]]~log10(d[[x]]))
data.frame(n=length(d[[y]]),r2=summary(fit)$r.squared,a=coef(fit)[1],b=coef(fit)[2])
}
ddply(gapminder,.(continent,year),model,y="lifeExp",x="gdpPercap")
ddply(gapminder,.(continent,year),model,y="lifeExp",x="pop")
library(gapminder)
library(plyr)
library(ggplot2)
library(dplyr)
library(DT)
data(gapminder)
add.trend.line<-function(x,y,d,...){
fit<-lm(d[[y]]~log10(d[[x]]))
abline(fit,...)
}
#recall functions and objects created in the functions lesson
colour.by.category<-function(x,table){
unname(table[x])
}
rescale<-function(x,r.out){
p<-(x-min(x))/(max(x)-min(x))r.out[[1]]+p*(r.out[[2]]-r.out[[1]])
library(gapminder)
library(plyr)
library(ggplot2)
library(dplyr)
library(DT)
data(gapminder)
add.trend.line<-function(x,y,d,...){
fit<-lm(d[[y]]~log10(d[[x]]))
abline(fit,...)
}
#recall functions and objects created in the functions lesson
colour.by.category<-function(x,table){
unname(table[x])
}
rescale<-function(x,r.out){
p<-(x-min(x))/(max(x)-min(x))
r.out[[1]]+p*(r.out[[2]]-r.out[[1]])
}
col<-colour.by.category(data.1982$continent,col.table)
library(gapminder)
library(plyr)
library(ggplot2)
library(dplyr)
library(DT)
data(gapminder)
colour.table<-c("red","blue","green","yellow")
add.trend.line<-function(x,y,d,...){
fit<-lm(d[[y]]~log10(d[[x]]))
abline(fit,...)
}
#recall functions and objects created in the functions lesson
colour.by.category<-function(x,table){
unname(table[x])
}
rescale<-function(x,r.out){
p<-(x-min(x))/(max(x)-min(x))
r.out[[1]]+p*(r.out[[2]]-r.out[[1]])
}
col<-colour.by.category(data.1982$continent,col.table)
library(gapminder)
library(plyr)
library(ggplot2)
library(dplyr)
library(DT)
data(gapminder)
col.table<-c("red","blue","green","yellow")
add.trend.line<-function(x,y,d,...){
fit<-lm(d[[y]]~log10(d[[x]]))
abline(fit,...)
}
#recall functions and objects created in the functions lesson
colour.by.category<-function(x,table){
unname(table[x])
}
rescale<-function(x,r.out){
p<-(x-min(x))/(max(x)-min(x))
r.out[[1]]+p*(r.out[[2]]-r.out[[1]])
}
col<-colour.by.category(data.1982$continent,col.table)
library(gapminder)
library(plyr)
library(ggplot2)
library(dplyr)
library(DT)
data(gapminder)
col.table<-c("red","blue","green","yellow")
add.trend.line<-function(x,y,d,...){
fit<-lm(d[[y]]~log10(d[[x]]))
abline(fit,...)
}
#recall functions and objects created in the functions lesson
colour.by.category<-function(x,table){
unname(table[x])
}
rescale<-function(x,r.out){
p<-(x-min(x))/(max(x)-min(x))
r.out[[1]]+p*(r.out[[2]]-r.out[[1]])
}
col<-colour.by.category(gapminder.1982$continent,col.table)
library(gapminder)
library(plyr)
library(ggplot2)
library(dplyr)
library(DT)
data(gapminder)
col.table<-c("red","blue","green","yellow")
gapminder.1982<-subset(gapminder,year==1982)
add.trend.line<-function(x,y,d,...){
fit<-lm(d[[y]]~log10(d[[x]]))
abline(fit,...)
}
#recall functions and objects created in the functions lesson
colour.by.category<-function(x,table){
unname(table[x])
}
rescale<-function(x,r.out){
p<-(x-min(x))/(max(x)-min(x))
r.out[[1]]+p*(r.out[[2]]-r.out[[1]])
}
col<-colour.by.category(gapminder.1982$continent,col.table)
cex<-rescale(sqrt(gapminder.1982$pop),c(0.2,10))
#now use function add.trend.line
plot(lifeExp~gdpPercap,gapminder.1982,log="x",cex=cex,col=col,pch=21)
d_ply(gapminder.1982,.(continent),function(x)add.trend.line("gdpPercap","lifeExp",x,col=col.table[x$continent]))
library(gapminder)
library(plyr)
library(ggplot2)
library(dplyr)
library(DT)
data(gapminder)
col.table<-c("red","blue","green","orange")
gapminder.1982<-subset(gapminder,year==1982)
add.trend.line<-function(x,y,d,...){
fit<-lm(d[[y]]~log10(d[[x]]))
abline(fit,...)
}
#recall functions and objects created in the functions lesson
colour.by.category<-function(x,table){
unname(table[x])
}
rescale<-function(x,r.out){
p<-(x-min(x))/(max(x)-min(x))
r.out[[1]]+p*(r.out[[2]]-r.out[[1]])
}
col<-colour.by.category(gapminder.1982$continent,col.table)
cex<-rescale(sqrt(gapminder.1982$pop),c(0.2,10))
#now use function add.trend.line
plot(lifeExp~gdpPercap,gapminder.1982,log="x",cex=cex,col=col,pch=21)
d_ply(gapminder.1982,.(continent),function(x)add.trend.line("gdpPercap","lifeExp",x,col=col.table[x$continent]))
library(gapminder)
library(plyr)
library(ggplot2)
library(dplyr)
library(DT)
data(gapminder)
summarise(gapminder,pop.mean=sum(pop),pop.var=var(pop),pop.max=max(pop))
library(gapminder)
library(plyr)
library(ggplot2)
library(dplyr)
library(DT)
data(gapminder)
summarise(gapminder,pop.mean=mean(pop),pop.var=var(pop),pop.max=max(pop))
library(gapminder)
library(plyr)
library(ggplot2)
library(dplyr)
library(DT)
data(gapminder)
summarise(gapminder,pop.mean=mean(pop),pop.var=var(pop),pop.max=max(pop))
#But if you want to split by groups, you need to combine with ddply
ddply(data,.(continent,year),summarise,pop.mean=mean(pop),pop.var=var(pop),pop.max=max(pop))
library(gapminder)
library(plyr)
library(ggplot2)
library(dplyr)
library(DT)
data(gapminder)
summarise(gapminder,pop.mean=mean(pop),pop.var=var(pop),pop.max=max(pop))
#But if you want to split by groups, you need to combine with ddply
ddply(data,.(continent,year),summarise,pop.mean=mean(pop,na.rm=TRUE),pop.var=var(pop),pop.max=max(pop))
library(gapminder)
library(plyr)
library(ggplot2)
library(dplyr)
library(DT)
data(gapminder)
summarise(gapminder,pop.mean=mean(pop),pop.var=var(pop),pop.max=max(pop))
#But if you want to split by groups, you need to combine with ddply
ddply(gapminder,.(continent,year),summarise,pop.mean=mean(pop),pop.var=var(pop),pop.max=max(pop))
library(gapminder)
library(plyr)
library(ggplot2)
library(dplyr)
library(DT)
data(gapminder)
ddply(gapminder,.(continent,year),function(x)sum(x$pop))
ddply(gapminder,.(continent,year),function(x)var(x$pop))
ddply(gapminder,.(continent,year),function(x)max(x$pop))
library(billboarder)
library(breakDown)
library(dplyr)
library(datasets)
data(mtcars)
#first pie chart
cyl<-as.factor(mtcars$cyl)
cyl<-table(mtcars$cyl)
billboarder()%>%
bb_piechart(cyl)
#second pie chart
gear<-table(mtcars$gear)
billboarder()%>%
bb_piechart(gear)
#third pie chart
mpg<-as.factor(mtcars$mpg)
mpg<-table(mtcars$mpg)
billboarder()%>%
bb_piechart(mpg)
#fourth pie chart
mpg<-mtcars$mpg
cyl<-as.factor(mtcars$cyl)
billboarder()%>%
bb_piechart(mpg,group=cyl)
library(billboarder)
library(breakDown)
library(dplyr)
library(datasets)
data(mtcars)
#first pie chart
cyl<-as.factor(mtcars$cyl)
cyl<-table(mtcars$cyl)
billboarder()%>%
bb_piechart(cyl)
#second pie chart
gear<-table(mtcars$gear)
billboarder()%>%
bb_piechart(gear)
#third pie chart
mpg<-as.factor(mtcars$mpg)
mpg<-table(mtcars$mpg)
billboarder()%>%
bb_piechart(mpg)
#fourth pie chart
mpg<-factor(mtcars$mpg)
cyl<-as.factor(mtcars$cyl)
billboarder()%>%
bb_piechart(mpg,group=cyl)
library(billboarder)
library(breakDown)
library(dplyr)
library(datasets)
data(mtcars)
#first pie chart
cyl<-as.factor(mtcars$cyl)
cyl<-table(mtcars$cyl)
billboarder()%>%
bb_piechart(cyl)
#second pie chart
gear<-table(mtcars$gear)
billboarder()%>%
bb_piechart(gear)
#third pie chart
mpg<-as.factor(mtcars$mpg)
mpg<-table(mtcars$mpg)
billboarder()%>%
bb_piechart(mpg)
library(gapminder)
library(plyr)
library(ggplot2)
library(dplyr)
library(DT)
data(gapminder)
get.n.countries<-function(x)length(unique(x$country))
#use daply
gap_country<-daply(gapminder,.(continent),get.n.countries)
gap_country
#use ddply
gap_country<-ddply(gapminder,.(continent),function(x)length(unique(x$country)))
gap_country
#use ddply and plot a bargraph
gap_country<-ddply(gapminder,.(continent),summarise,totalcountries=length(unique(country)))
gap_country
g<-ggplot(gap_country,aes(x=continent,y=totalcountries,fill=continent))+geom_bar(stat="identity")+
geom_text(aes(label=gap_country$totalcountries),nudge_y=1)+xlab("Continent")+ylab("Total Countries")+
ggtitle("Barplot of Total Countries in each Continent")
ggplotly(g)
library(gapminder)
library(plyr)
library(ggplot2)
library(dplyr)
library(DT)
library(plotly)
data(gapminder)
get.n.countries<-function(x)length(unique(x$country))
#use daply
gap_country<-daply(gapminder,.(continent),get.n.countries)
gap_country
#use ddply
gap_country<-ddply(gapminder,.(continent),function(x)length(unique(x$country)))
gap_country
#use ddply and plot a bargraph
gap_country<-ddply(gapminder,.(continent),summarise,totalcountries=length(unique(country)))
gap_country
g<-ggplot(gap_country,aes(x=continent,y=totalcountries,fill=continent))+geom_bar(stat="identity")+
geom_text(aes(label=gap_country$totalcountries),nudge_y=1)+xlab("Continent")+ylab("Total Countries")+
ggtitle("Barplot of Total Countries in each Continent")
ggplotly(g)

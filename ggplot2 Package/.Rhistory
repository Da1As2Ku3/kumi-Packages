library(dplyr)
library(gridExtra)
library(mgcv)
library(MASS)
library(maps)
library(mapproj)
world <- map_data("world")
worldmap <- ggplot(world, aes(long, lat, group = group)) +
geom_path() +
scale_y_continuous(NULL, breaks = (-2:3) * 30, labels = NULL) +
scale_x_continuous(NULL, breaks = (-4:4) * 45, labels = NULL)
g1<-worldmap + coord_map()
# Some crazier projections
g2<-worldmap + coord_map("ortho")
g3<-worldmap + coord_map("stereographic")
grid.arrange(g1,g2,g3,ncol=3)
library(ggplot2)
library(dplyr)
library(gridExtra)
library(mgcv)
library(MASS)
library(maps)
library(mapproj)
base <- ggplot(mpg, aes(cty, hwy, color = factor(cyl))) +
geom_jitter() +
geom_abline(colour = "grey50", size = 2)
base
library(ggplot2)
library(dplyr)
library(gridExtra)
library(mgcv)
library(MASS)
library(maps)
library(mapproj)
styled <- labelled +
theme_bw() +
theme(
plot.title = element_text(face = "bold", size = 12),
legend.background = element_rect(fill = "white", size = 4, colour = "white"),
legend.justification = c(0, 1),
legend.position = c(0, 1),
axis.ticks = element_line(colour = "grey70", size = 0.2),
panel.grid.major = element_line(colour = "grey70", size = 0.2),
panel.grid.minor = element_blank()
)
library(ggplot2)
library(dplyr)
library(gridExtra)
library(mgcv)
library(MASS)
library(maps)
library(mapproj)
labelled <- base +
labs(
x = "City mileage/gallon",
y = "Highway mileage/gallon",
colour = "Cylinders",
title = "Highway and city mileage are highly correlated"
) +
scale_colour_brewer(type = "seq", palette = "Spectral")
labelled
styled <- labelled +
theme_bw() +
theme(
plot.title = element_text(face = "bold", size = 12),
legend.background = element_rect(fill = "white", size = 4, colour = "white"),
legend.justification = c(0, 1),
legend.position = c(0, 1),
axis.ticks = element_line(colour = "grey70", size = 0.2),
panel.grid.major = element_line(colour = "grey70", size = 0.2),
panel.grid.minor = element_blank()
)
styled
library(ggplot2)
library(dplyr)
library(gridExtra)
library(mgcv)
library(MASS)
library(maps)
library(mapproj)
labelled <- base +
labs(
x = "City mileage/gallon",
y = "Highway mileage/gallon",
colour = "Cylinders",
title = "Highway and city mileage are highly correlated"
) +
scale_colour_brewer(type = "seq", palette = "Spectral")
styled <- labelled +
theme_bw() +
theme(
plot.title = element_text(face = "bold", size = 12),
legend.background = element_rect(fill = "white", size = 4, colour = "white"),
legend.justification = c(0, 1),
legend.position = c(0, 1),
axis.ticks = element_line(colour = "grey70", size = 0.2),
panel.grid.major = element_line(colour = "grey70", size = 0.2),
panel.grid.minor = element_blank()
)
styled
library(ggplot2)
library(dplyr)
library(gridExtra)
library(mgcv)
library(MASS)
library(maps)
library(mapproj)
df <- data.frame(x = 1:3, y = 1:3)
base <- ggplot(df, aes(x, y)) + geom_point()
g1<-base + theme_grey() + ggtitle("theme_grey()")
g2<-base + theme_bw() + ggtitle("theme_bw()")
g3<-base + theme_linedraw() + ggtitle("theme_linedraw()")
g4<-base + theme_light() + ggtitle("theme_light()")
g5<-base + theme_dark() + ggtitle("theme_dark()")
g6<-base + theme_minimal() + ggtitle("theme_minimal()")
g7<-base + theme_classic() + ggtitle("theme_classic()")
g8<-base + theme_void() + ggtitle("theme_void()")
grid.arrange(g1,g2,g3,g4,g5,g6,g7,g8,ncol=4,nrow=2)
library(ggplot2)
library(dplyr)
library(gridExtra)
library(mgcv)
library(MASS)
library(maps)
library(mapproj)
library(ggthemes)
install.packages("ggthemes")
library(ggthemes)
library(ggplot2)
library(dplyr)
library(gridExtra)
library(mgcv)
library(MASS)
library(maps)
library(mapproj)
library(ggthemes)
base + theme_tufte() + ggtitle("theme_tufte()")
base + theme_solarized() + ggtitle("theme_solarized()")
base + theme_excel() + ggtitle("theme_excel()") # ;)
library(ggplot2)
library(dplyr)
library(gridExtra)
library(mgcv)
library(MASS)
library(maps)
library(mapproj)
library(ggthemes)
g1<-base + theme_tufte() + ggtitle("theme_tufte()")
g2<-base + theme_solarized() + ggtitle("theme_solarized()")
g3<-base + theme_excel() + ggtitle("theme_excel()") # ;)
grid.arrange(g1,g2,g3,ncol=3)
library(ggplot2)
library(dplyr)
library(gridExtra)
library(mgcv)
library(MASS)
library(maps)
library(mapproj)
library(ggthemes)
base_t <- base + labs(title = "This is a ggplot") + xlab(NULL) + ylab(NULL)
library(ggplot2)
library(dplyr)
library(gridExtra)
library(mgcv)
library(MASS)
library(maps)
library(mapproj)
library(ggthemes)
df <- data.frame(x = 1:3, y = 1:3)
base <- ggplot(df, aes(x, y)) + geom_point()
base_t <- base + labs(title = "This is a ggplot") + xlab(NULL) + ylab(NULL)
g1<-base_t + theme(plot.title = element_text(size = 16))
g2<-base_t + theme(plot.title = element_text(face = "bold", colour = "red"))
g3<-base_t + theme(plot.title = element_text(hjust = 1))
grid.arrange(g1,g2,g3,ncol=3)
library(ggplot2)
library(dplyr)
library(gridExtra)
library(mgcv)
library(MASS)
library(maps)
library(mapproj)
library(ggthemes)
# The margins here look asymmetric because there are also plot margins
g1<-base_t + theme(plot.title = element_text(margin = margin()))
g2<-base_t + theme(plot.title = element_text(margin = margin(t = 10, b = 10)))
g3<-base_t + theme(axis.title.y = element_text(margin = margin(r = 10)))
grid.arrange(g1,g2,g3,ncol=3)
library(ggplot2)
library(dplyr)
library(gridExtra)
library(mgcv)
library(MASS)
library(maps)
library(mapproj)
library(ggthemes)
g1<-base + theme(panel.grid.major = element_line(colour = "black"))
g2<-base + theme(panel.grid.major = element_line(size = 2))
g3<-base + theme(panel.grid.major = element_line(linetype = "dotted"))
grid.arrange(g1,g2,g3,ncol=3)
library(ggplot2)
library(dplyr)
library(gridExtra)
library(mgcv)
library(MASS)
library(maps)
library(mapproj)
library(ggthemes)
g1<-base + theme(plot.background = element_rect(fill = "grey80", colour = NA))
g2<-base + theme(plot.background = element_rect(colour = "red", size = 2))
g3<-base + theme(panel.background = element_rect(fill = "linen"))
grid.arrange(g1,g2,g3,ncol=3)
library(ggplot2)
library(dplyr)
library(gridExtra)
library(mgcv)
library(MASS)
library(maps)
library(mapproj)
library(ggthemes)
g1<-base
g2<-last_plot() + theme(panel.grid.minor = element_blank())
g3<-last_plot() + theme(panel.grid.major = element_blank())
grid.arrange(g1,g2,g3,ncol=3)
library(ggplot2)
library(dplyr)
library(gridExtra)
library(mgcv)
library(MASS)
library(maps)
library(mapproj)
library(ggthemes)
g1<-base
g2<-last_plot() + theme(panel.grid.minor = element_blank())
g3<-last_plot() + theme(panel.grid.major = element_blank())
grid.arrange(g1,g2,g3,ncol=3)
g1<-last_plot() + theme(panel.background = element_blank())
g2<-last_plot() + theme(
axis.title.x = element_blank(),
axis.title.y = element_blank()
)
g3<-last_plot() + theme(axis.line = element_line(colour = "grey50"))
grid.arrange(g1,g2,g3,ncol=3)
library(ggplot2)
library(dplyr)
library(gridExtra)
library(mgcv)
library(MASS)
library(maps)
library(mapproj)
library(ggthemes)
old_theme <- theme_update(
plot.background = element_rect(fill = "lightblue3", colour = NA),
panel.background = element_rect(fill = "lightblue", colour = NA),
axis.text = element_text(colour = "linen"),
axis.title = element_text(colour = "linen")
)
base
theme_set(old_theme)
base
library(ggplot2)
library(dplyr)
library(gridExtra)
library(mgcv)
library(MASS)
library(maps)
library(mapproj)
library(ggthemes)
g1<-base + theme(plot.background = element_rect(colour = "grey50", size = 2))
g2<-base + theme(
plot.background = element_rect(colour = "grey50", size = 2),
plot.margin = margin(2, 2, 2, 2)
)
g3<-base + theme(plot.background = element_rect(fill = "lightblue"))
library(ggplot2)
library(dplyr)
library(gridExtra)
library(mgcv)
library(MASS)
library(maps)
library(mapproj)
library(ggthemes)
g1<-base + theme(plot.background = element_rect(colour = "grey50", size = 2))
g2<-base + theme(
plot.background = element_rect(colour = "grey50", size = 2),
plot.margin = margin(2, 2, 2, 2)
)
g3<-base + theme(plot.background = element_rect(fill = "lightblue"))
grid.arrange(g1,g2,g3,ncol=3)
library(ggplot2)
library(dplyr)
library(gridExtra)
library(mgcv)
library(MASS)
library(maps)
library(mapproj)
library(ggthemes)
df <- data.frame(x = 1:3, y = 1:3)
base <- ggplot(df, aes(x, y)) + geom_point()
# Accentuate the axes
g1<-base + theme(axis.line = element_line(colour = "grey50", size = 1))
# Style both x and y axis labels
g2<-base + theme(axis.text = element_text(color = "blue", size = 12))
# Useful for long labels
g3<-base + theme(axis.text.x = element_text(angle = -90, vjust = 0.5))
grid.arrange(g1,g2,g3,ncol=3)
library(ggplot2)
library(dplyr)
library(gridExtra)
library(mgcv)
library(MASS)
library(maps)
library(mapproj)
library(ggthemes)
df <- data.frame(
x = c("label", "a long label", "an even longer label"),
y = 1:3
)
base <- ggplot(df, aes(x, y)) + geom_point()
g1<-base
g2<-base +
theme(axis.text.x = element_text(angle = -30, vjust = 1, hjust = 0)) +
xlab(NULL) +
ylab(NULL)
grid.arrange(g1,g2,ncol=2)
library(ggplot2)
library(dplyr)
library(gridExtra)
library(mgcv)
library(MASS)
library(maps)
library(mapproj)
library(ggthemes)
df <- data.frame(
x = c("label", "a long label", "an even longer label"),
y = 1:3
)
base <- ggplot(df, aes(x, y)) + geom_point()
g1<-base
g2<-base +
theme(axis.text.x = element_text(angle = -30, vjust = 1, hjust = 0)) +
xlab(NULL) +
ylab(NULL)
grid.arrange(g1,g2,ncol=2)
library(ggplot2)
library(dplyr)
library(gridExtra)
library(mgcv)
library(MASS)
library(maps)
library(mapproj)
library(ggthemes)
df <- data.frame(x = 1:4, y = 1:4, z = rep(c("a", "b"), each = 2))
base <- ggplot(df, aes(x, y, colour = z)) + geom_point()
g1<-base + theme(
legend.background = element_rect(
fill = "lemonchiffon",
colour = "grey50",
size = 1
)
)
g2<-base + theme(
legend.key = element_rect(color = "grey50"),
legend.key.width = unit(0.9, "cm"),
legend.key.height = unit(0.75, "cm")
)
g3<-base + theme(
legend.text = element_text(size = 15),
legend.title = element_text(size = 15, face = "bold")
)
grid.arrange(g1,g2,g3,ncol=3)
library(ggplot2)
library(dplyr)
library(gridExtra)
library(mgcv)
library(MASS)
library(maps)
library(mapproj)
library(ggthemes)
base <- ggplot(df, aes(x, y)) + geom_point()
# Modify background
g1<-base + theme(panel.background = element_rect(fill = "lightblue"))
# Tweak major grid lines
g2<-base + theme(
panel.grid.major = element_line(color = "gray60", size = 0.8)
)
# Just in one direction
g3<-base + theme(
panel.grid.major.x = element_line(color = "gray60", size = 0.8)
)
grid.arrange(g1,g2,g3,ncol=3)
library(ggplot2)
library(dplyr)
library(gridExtra)
library(mgcv)
library(MASS)
library(maps)
library(mapproj)
library(ggthemes)
base2 <- base + theme(plot.background = element_rect(colour = "grey50"))
# Wide screen
g1<-base2 + theme(aspect.ratio = 9 / 16)
# Long and skiny
g2<-base2 + theme(aspect.ratio = 2 / 1)
# Square
g3<-base2 + theme(aspect.ratio = 1)
grid.arrange(g1,g2,g3,ncol=3)
library(ggplot2)
library(dplyr)
library(gridExtra)
library(mgcv)
library(MASS)
library(maps)
library(mapproj)
library(ggthemes)
df <- data.frame(x = 1:4, y = 1:4, z = c("a", "a", "b", "b"))
base_f <- ggplot(df, aes(x, y)) + geom_point() + facet_wrap(~z)
g1<-base_f
g2<-base_f + theme(panel.margin = unit(0.5, "in"))
g3<-base_f + theme(
strip.background = element_rect(fill = "grey20", color = "grey80", size = 1),
strip.text = element_text(colour = "white")
)
grid.arrange(g1,g2,g3,ncol=3)
library(ggplot2)
library(dplyr)
library(gridExtra)
library(mgcv)
library(MASS)
library(maps)
library(mapproj)
library(ggthemes)
pdf("output.pdf", width = 6, height = 6)
ggplot(mpg, aes(displ, cty)) + geom_point()
dev.off()
library(ggplot2)
library(dplyr)
library(gridExtra)
library(mgcv)
library(MASS)
library(maps)
library(mapproj)
library(ggthemes)
ggplot(mpg, aes(displ, cty)) + geom_point()
ggsave("output.pdf")
library(ggplot2)
library(dplyr)
library(tidyr)
data(ec2)
head(ec2)
library(ggplot2)
library(dplyr)
library(tidyr)
data(economics)
head(economics)
library(ggplot2)
library(dplyr)
library(tidyr)
data(economics)
weather <- dplyr::data_frame(
day = rep(1:3, 2),
obs = rep(c("temp", "rain"), each = 3),
val = c(c(23, 22, 20), c(0, 0, 5))
)
weather
library(ggplot2)
library(dplyr)
library(tidyr)
data(economics)
weather <- dplyr::data_frame(
day = rep(1:3, 2),
obs = rep(c("temp", "rain"), each = 3),
val = c(c(23, 22, 20), c(0, 0, 5))
)
spread(weather, key = obs, value = val)
library(ggplot2)
library(dplyr)
library(tidyr)
data(economics)
trt <- dplyr::data_frame(
var = paste0(rep(c("beg", "end"), each = 3), "_", rep(c("a", "b", "c"))),
val = c(1, 4, 2, 10, 5, 11)
)
trt
library(ggplot2)
library(dplyr)
library(tidyr)
data(economics)
separate(trt, var, c("time", "treatment"), "_")
library(ggplot2)
library(dplyr)
library(gridExtra)
ggplot(mpg, aes(displ, hwy)) + geom_point() + facet_grid(.~class)
library(ggplot2)
library(dplyr)
library(gridExtra)
ggplot(mpg, aes(displ, hwy)) + geom_point() + facet_grid(.~class)+geom_smooth(method="lm",se=FALSE)
library(ggplot2)
library(dplyr)
library(gridExtra)
ggplot(mpg, aes(displ, hwy)) + geom_point() + facet_grid(class~.)+geom_smooth(method="lm",se=FALSE)
library(ggplot2)
library(dplyr)
library(gridExtra)
library(mgcv)
library(MASS)
g1<-ggplot(mpg, aes(displ, colour = drv)) + geom_density()
g2<-ggplot(mpg, aes(displ, colour = drv)) + geom_density() + facet_wrap(~drv, ncol = 1)
grid.arrange(g1,g2,ncol=2)
g1<-ggplot(mpg, aes(displ, fill = drv)) + geom_density()
g2<-ggplot(mpg, aes(displ, fill = drv)) + geom_density() + facet_wrap(~drv, ncol = 1)
grid.arrange(g1,g2,ncol=2)
